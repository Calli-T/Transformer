순전파=순방향전달: 입력이 주어지면 신경망의 출력을 계산하는 프로세스
역전파: 순전파 방향과 반대로 연산 진행, 예측과 실제 값의 차이를 계산해 오차를 줄인다.
순전파 과정에서 나온 오차를 활용해서 각 계층의 가중치와 편향을 최적화한다.

순전파는 입력값과 가중치를 곱한걸 전부 다 더하고, 편향을 더한다.
오차는 위 과정의 결과랑 실제 값을 가지고 오차 함수를 사용해서 뱉는다.

역전파는 가중치 갱신이 역순이다.
모델의 학습은 오차가 작아지는 방향으로 갱신하므로 미분값이 0에 가까워져야한다.

146p
https://goofcode.github.io/back-propagation
https://hi-guten-tag.tistory.com/211
https://kimmessi.tistory.com/20
https://bskyvision.com/718
https://wikidocs.net/37406
????

시그모이드 함수의 미분과정:             https://187cm.tistory.com/30
좀 더 자세한 미분과정:                   https://cord-ai.tistory.com/47

오차역전파를 일일이 미분하는 대신 하는이유:
가중치를 갱신하기 위해서는 각 노드의 손실함수를 일일히 미분했다간
너무 많은 시간을 잡아먹기때문에 미분의 연쇄법칙을 이용해 계산양을 줄인다.

미분의 연쇄법칙: 합성 함수의 미분은 합성함수를 구성하는 각 함수의 미분의 곱으로 나타낼 수 있다

출력 목표치: t
k층 출력: a(k) = a1w1 + a2w2 +... +anwn + bias
k층 오차: δ(k) = a(k) - t
k층 가중치: W(k)
학습률: α

k층 오차성분 계산: δ(k) = δ(k+1)W(k+1)a(k)'
k층 가중치 보정: W(k) = W(k) - α * δ(k) * a(k-1)                  이번층 가중치 - 학습률 * k층 오차성분 * 이전층 출력

W(k) = W(k) - α * ∂ E / ∂ W(k)              ∂ E / ∂ W(k)는 가중치의 오차에 대한 미분

경사하강법 때 W_i+1 = W_i - α∇f(Wi)               ∇f(Wi)는 기울기, 기울기가 -이면 오른쪽으로, +면 왼쪽으로 가서 기울기 0인구간으로 간다.
∂ E / ∂ W(k) 와 ∇f(Wi)는 무슨 차이인가?
앞은 가중치를 오차에 대해 미분하였다. 뒤는 기울기이다, 애초에 뭐에 대한 기울기였나? 경사하강법의 가중치의 도함수가 기울기였다.
가중치의 오차에 대한 미분, https://hyjykelly.tistory.com/38 이것과는 무슨 차이가 있는가

https://wikidocs.net/37406에선 앞으로 넘길때 E_total즉,한 층의 오차 전체!!!를 사용한다
다시 보니 시그모이드 출력값의 Etotal에 대해 미분하는 과정에서 나머지는 상수로 다 지워진다

https://wikidocs.net/37406 이걸로 확인

149p
오차들의 합을 L 비스무리한 기호로 쓰는것같다, wikidocs에서는 E total이라 쓰는듯
∂ E total / ∂ Wn(1)    :    오차 전체를 n번째 가중치에 대해 편미분한것, (괄호안 1은 갱신과정에서 첫 번째 가중치를 의미한다. 즉, 오차역전파 적용안된것)

위 식은 다르게 표현할 수 있는데
∂ E_total / ∂ Wn(1) = (∂ E_total / ∂ σ1) * (∂ σ1 / ∂ z3) * (∂ z3/∂ Wn)
이다 이는 앞서 적은 미분의 연쇄법칙에 의해 가능해진다.
(숫자는 임의대로 사용함)
z3: 해당 가중치(Wn)가 포함된 가중치 합, 들어오는 모든 값*가중치와 편향의 합을 나타낸다.
σ1: 해당 가중치를 받은 퍼셉트론의 활성화 함수를 거치고 나서의 값, 활성화함수(z3)이며 책의 예시는 시그모이드이다
E_total: 해당 층에서 손실 함수 값의 합 전체를 의미한다. (wikidocs의 예시는 MSE, 책의 예시는 BCE)

이것들이 무슨의미를 가지는가...
∂ E_total / ∂ σ1는 퍼셉트론의 출력값에 대한 손실함수의 값의 합의 편미분이다.
각 퍼셉트론의 출력의 합을 하나의 σ로 미분했을 때, 나머지는 전부 상수취급하여 미분했을 때 0으로 처리되는 모양이다.
미분과정은 각기 다르다?
MSE의 경우 퍼셉트론 2개의 출력에 대해
E_total = 1/2*(target_σ1 - output_σ1)^2 + 1/2*(target_σ2 - output_o2)^2으로 계산하는데
이거 단순히 오차합이 아니고 오차들의 내적 아닌가?
또 여러 오차들을 더해서 계산해야하는가? 교차 검증이 필요하다. 추후 교수님의 ppt로 확인해봐야겠다.
-> 확인해보니 에러의 합이 아니고 아예 행렬로 나온다, 각 퍼셉트론의 오차에 대해 다루는게 맞는듯
-> 조금 더 오래 생각해보자
wikidocs쪽에선 sigmoid를 포함한 여러 미분 과정을 생략하고 있다.

중간항 (∂ σ1 / ∂ z3)은
입력값에 대한 활성화 함수의 미분이다 f(x)에 대해 f'(x)를 구해주면 될 문제다
활성화 함수의 도함수를 미리 알고 있는것이 관건일듯.

∂ z3/∂ Wn은 해당 퍼셉트론으로 들어가는 가중치 하나에 대한 가중치합 전체의 편미분이다.
z3은 W1X1 + W2X2 + .... +WnXn + bias이며, 이를 Wn을 제외한 모든값을 상수로 취급하고 미분하면 결론적으로 Xn값만이 남게된다.
즉, 이전 퍼셉트론의 출력값이다.

∂ E_total / ∂ Wn(1)는 가중치에 대한 오차(전체인지는 몰?루)의 미분이고
활성화 함수에 대한 손실함수의 미분이고 손실함수 미분 꼴만 잘 알고 있으면 값 딱딱 넣어서 가능
가중치 합에 대한 활성화 함수 미분은 그냥 활성화함수의 도함수에 가중치합을 딱딱 넣어서 가능
갱신하고싶은 가중치 하나에 대한 가중치합 전체의 편미분은 그냥 이전 퍼셉트론의 출력값이다
따라서 가중를 갱신하고 싶다면
W(k) = W(k) - α * ∂ E / ∂ W(k) 의 식을 따르되
∂ E / ∂ W(k)의 계산은
손실함수/할성화함수의 도함수와 해당 퍼셉트론의 가중치합, (해당 가중치와 곱해진)이전 퍼셉트론의 출력값을 잘 알고 있다면
날로 먹을 수 있고, 이게 역방향으로 갱신되니까 오차 역전파인듯

이게 행렬곱에선 뭔 꼴인지 추후에 한 번 볼것

151p

W(k) = W(k) - α * ∂ E / ∂ W(k)
∂ E_total / ∂ Wn(1) = (∂ E_total / ∂ σ1) * (∂ σ1 / ∂ z3) * (∂ z3/∂ Wn)
손실함수값에 대해 오차 미분, 도함수 알아둘것
가중합에 대한 손실함수값의 미분, 손실함수 도함수 알아둘것
단일 가중치에 대한 가중합의 미분, 이건 그냥 그 가중치로 넘어온 이전층의 출력값