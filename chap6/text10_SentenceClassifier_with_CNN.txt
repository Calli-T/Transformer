349p
텍스트 데이터는 2차원 합성곱이 아닌, 1차원 합성곱을 해야한다...

(내 생각에는, 문장은 단어로 이루어진 1차원 벡터이다
단어의 임베딩 벡터가 각각 있으니 행렬이라 생각해버리면
단어의 순서를 고려하지 않고 작업하게된다???)
텐서와 축의 개수에 관하여
https://velog.io/@skkumin/%ED%85%90%EC%84%9CTensor%EC%9D%98-%EC%9D%B4%ED%95%B4

문장을 단어 단위로 분리하고
각 단어의 임베딩해서 나온 1차원 벡터 데이터를 입력값으로 사용

수평방향 이동x 수직으로만 이동하는 필터 사용

필터의 크기는 필터의 높이에만 영향을 끼친다(ex, 3*3필터가 아니라 그냥 3필터인듯)
필터의 너비는 입력 임베딩 크기와 같다

1차원 합성곱사용(텍스트 데이터는 1차원 텐서이다. 단, 단어 각각은 또한 임베딩 벡터)

필터 크기가 3이라면 인접한 3개 토큰에 대해 연산을 수행한다.
N-gram과 유사한 개념이다.

350p
예시는 필터크기가 3, stride 1/임베딩 벡터 길이 6인 1차원 CNN
출력의 결과도 1차원 텐서이다

351p
크기가 다른 여러 종류의 필터를 사용해서
여러 스칼라 값을 얻을 수 있고(출력 벡터를 풀링해서 하나로 압축해버리는듯하다)
출력 벡터를 모아 하나의 벡터로 연결해서 하나의 특징 벡터로 만들 수 있다고 한다

서로 다른 크기의 필터 사용
->출력 벡터들을 각각 풀링
->풀링된걸 이어붙여서 하나의 특징 벡터로 제작
->분류

※ ??? 파이썬 __name__이나 모듈, 패키지, main개념을 좀 정립할 필요가 있을것같다