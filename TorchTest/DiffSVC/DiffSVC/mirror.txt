        for epoch in tqdm(range(self.hparams['train_target_epochs'])):
            # '일단은' 한 파일씩 학습함
            cost = 0.0

            for fname in wav_list:
                temp_path = os.path.join(wav_path, fname)
                save_path = os.path.join(self.hparams['train_dataset_path_f0'], fname + "_f0.npy")
                f0 = np.load(save_path)

                # - for model input -
                ret = self.get_cond(temp_path, f0)
                cond = ret['decoder_inp'].transpose(1, 2)
                gt_mel = torch.from_numpy(ret['raw_gt_mel']).to(self.hparams['device'])
                B1MT_input_mel = gt_mel.unsqueeze(0).unsqueeze(1).transpose(2, 3)
                B1MT_input_mel = B1MT_input_mel.expand(self.hparams['batch_size_train'], -1, -1, -1)
                B1MT_input_mel = self.norm_spec(B1MT_input_mel)  # 정상화

                noises = torch.randn(B1MT_input_mel.shape).to(self.hparams['device'])
                diffusion_times = np.random.randint(low=0, high=self.hparams["steps"],
                                                    size=self.hparams['batch_size_train'])
                t = int(diffusion_times[0])

                signal_rates = torch.Tensor(np.array(np.sqrt(self.alpha_bars[t]))).to(self.hparams['device'])
                noise_rates = torch.Tensor(np.array(np.sqrt(1. - self.alpha_bars[t]))).to(self.hparams['device'])
                noisy_images = torch.mul(signal_rates.view([-1, 1, 1, 1]), B1MT_input_mel) + torch.mul(
                    noise_rates.view([-1, 1, 1, 1]), noises).to(self.hparams['device'])

                step = torch.Tensor([t]).to(self.hparams['device'])
                pred_noises = self.wavenet(noisy_images, step, cond)

                print(pred_noises.shape)
                loss = self.criterion(noises, pred_noises)

                self.optimizer.zero_grad()
                loss.backward()
                self.optimizer.step()
                cost += loss

                # print()

            print(f"Epoch: {epoch + 1}, Loss:{cost / len(wav_list):.4f}")